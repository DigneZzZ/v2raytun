name: Update README with Latest and Pre-release Info

permissions:
  contents: write

on:
  release:
    types: [published, prereleased]
  push:
    branches:
      - main

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Get latest release info
        id: get_latest_release
        uses: actions/github-script@v3
        with:
          script: |
            const latestRelease = await github.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            core.setOutput('tag_name', latestRelease.data.tag_name);
            core.setOutput('html_url', latestRelease.data.html_url);
            core.setOutput('assets', JSON.stringify(latestRelease.data.assets.map(asset => ({
              name: asset.name,
              download_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/releases/download/latest/${asset.name}`
            }))));
            core.setOutput('prerelease', latestRelease.data.prerelease);

      - name: Update README.md
        run: |
          # Extract section markers and static content
          awk '/<!-- LATEST RELEASE START -->/{flag=1;next}/<!-- LATEST RELEASE END -->/{flag=0}flag' README.md > temp_static_content.md
          
          # Handle latest release
          if [ "${{ steps.get_latest_release.outputs.prerelease }}" = "true" ]; then
            # For pre-release
            echo "## Pre-release: ${{ steps.get_latest_release.outputs.tag_name }}" > temp_latest_release.md
            echo "[View on GitHub](${{ steps.get_latest_release.outputs.html_url }})" >> temp_latest_release.md
          else
            # For latest release
            echo "## Latest Release" > temp_latest_release.md
            echo "[View on GitHub](https://github.com/${{ github.repository }}/releases/latest)" >> temp_latest_release.md
          fi

          echo "" >> temp_latest_release.md
          echo "### Assets:" >> temp_latest_release.md
          
          assets='${{ steps.get_latest_release.outputs.assets }}'
          echo $assets | jq -c '.[]' | while read i; do
            name=$(echo $i | jq -r '.name')
            url=$(echo $i | jq -r '.download_url')
            echo "- [$name]($url)" >> temp_latest_release.md
          done
          
          # Combine the static content with the latest release info
          echo "" >> temp_latest_release.md
          echo "<!-- LATEST RELEASE START -->" >> temp_static_content.md
          cat temp_latest_release.md >> temp_static_content.md
          echo "<!-- LATEST RELEASE END -->" >> temp_static_content.md

          # Update the README.md
          mv temp_static_content.md README.md

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Update README with latest release info"
          git push
